//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
//
// On Thu Oct 10 17:28:05 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_get_inp                    O     1
// send_out                       O    32 reg
// RDY_send_out                   O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// get_inp_a                      I     8
// get_inp_b                      I     8
// get_inp_c                      I    32 reg
// EN_get_inp                     I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMult(CLK,
	      RST_N,

	      get_inp_a,
	      get_inp_b,
	      get_inp_c,
	      EN_get_inp,
	      RDY_get_inp,

	      send_out,
	      RDY_send_out);
  input  CLK;
  input  RST_N;

  // action method get_inp
  input  [7 : 0] get_inp_a;
  input  [7 : 0] get_inp_b;
  input  [31 : 0] get_inp_c;
  input  EN_get_inp;
  output RDY_get_inp;

  // value method send_out
  output [31 : 0] send_out;
  output RDY_send_out;

  // signals for module outputs
  wire [31 : 0] send_out;
  wire RDY_get_inp, RDY_send_out;

  // register inp_A
  reg [15 : 0] inp_A;
  wire [15 : 0] inp_A_D_IN;
  wire inp_A_EN;

  // register inp_B
  reg [15 : 0] inp_B;
  wire [15 : 0] inp_B_D_IN;
  wire inp_B_EN;

  // register inp_C
  reg [31 : 0] inp_C;
  wire [31 : 0] inp_C_D_IN;
  wire inp_C_EN;

  // register result
  reg [31 : 0] result;
  wire [31 : 0] result_D_IN;
  wire result_EN;

  // register state
  reg [1 : 0] state;
  wire [1 : 0] state_D_IN;
  wire state_EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_compute,
       CAN_FIRE_get_inp,
       WILL_FIRE_RL_rl_compute,
       WILL_FIRE_get_inp;

  // remaining internal signals
  wire [31 : 0] SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015;
  wire [15 : 0] IF_inp_B_BITS_15_TO_11_42_EQ_0_43_THEN_IF_inp__ETC___d1003,
		IF_inp_B_BITS_15_TO_13_28_EQ_0_29_THEN_IF_inp__ETC___d1001,
		IF_inp_B_BITS_15_TO_1_EQ_0_THEN_IF_inp_B_BIT_0_ETC___d1013,
		IF_inp_B_BITS_15_TO_3_50_EQ_0_51_THEN_IF_inp_B_ETC___d1011,
		IF_inp_B_BITS_15_TO_5_74_EQ_0_75_THEN_IF_inp_B_ETC___d1009,
		IF_inp_B_BITS_15_TO_7_65_EQ_0_66_THEN_IF_inp_B_ETC___d1007,
		IF_inp_B_BITS_15_TO_9_21_EQ_0_22_THEN_IF_inp_B_ETC___d1005,
		IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9,
		IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889,
		IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927,
		IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957,
		IF_inp_B_BIT_13_60_THEN_IF_inp_B_BIT_12_30_THE_ETC___d980,
		IF_inp_B_BIT_14_82_THEN_IF_inp_B_BIT_13_60_THE_ETC___d993,
		IF_inp_B_BIT_15_81_THEN_IF_inp_B_BIT_15_81_THE_ETC___d999,
		IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149,
		IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265,
		IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373,
		IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472,
		IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564,
		IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647,
		IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720,
		IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784,
		IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841,
		product__h1162,
		product__h1549,
		product__h1936,
		product__h2323,
		product__h2710,
		product__h3097,
		product__h3484,
		product__h3871,
		product__h4258,
		product__h4645,
		product__h5032,
		product__h5419,
		product__h5806,
		product__h6193,
		product__h6580,
		x__h748;
  wire [3 : 0] spliced_bits__h1566,
	       spliced_bits__h1953,
	       spliced_bits__h2340,
	       spliced_bits__h264,
	       spliced_bits__h2727,
	       spliced_bits__h309,
	       spliced_bits__h3114,
	       spliced_bits__h3144,
	       spliced_bits__h339,
	       spliced_bits__h3501,
	       spliced_bits__h3531,
	       spliced_bits__h369,
	       spliced_bits__h3888,
	       spliced_bits__h3918,
	       spliced_bits__h399,
	       spliced_bits__h4275,
	       spliced_bits__h429,
	       spliced_bits__h4305,
	       spliced_bits__h459,
	       spliced_bits__h4662,
	       spliced_bits__h4692,
	       spliced_bits__h4722,
	       spliced_bits__h489,
	       spliced_bits__h5049,
	       spliced_bits__h5079,
	       spliced_bits__h5109,
	       spliced_bits__h5436,
	       spliced_bits__h5466,
	       spliced_bits__h5496,
	       spliced_bits__h5823,
	       spliced_bits__h5853,
	       spliced_bits__h5883,
	       spliced_bits__h5913,
	       spliced_bits__h6210,
	       spliced_bits__h6240,
	       spliced_bits__h6270,
	       spliced_bits__h6300,
	       spliced_bits__h6597,
	       spliced_bits__h6627,
	       spliced_bits__h6657,
	       spliced_bits__h6687;
  wire carry__h10333,
       carry__h10336,
       carry__h10339,
       carry__h11021,
       carry__h11024,
       carry__h11027,
       carry__h11708,
       carry__h11711,
       carry__h11714,
       carry__h12847,
       carry__h12850,
       carry__h12853,
       carry__h13535,
       carry__h13538,
       carry__h13541,
       carry__h14222,
       carry__h14225,
       carry__h14228,
       carry__h15361,
       carry__h15364,
       carry__h15367,
       carry__h16049,
       carry__h16052,
       carry__h16055,
       carry__h16736,
       carry__h16739,
       carry__h16742,
       carry__h17875,
       carry__h17878,
       carry__h17881,
       carry__h18563,
       carry__h18566,
       carry__h18569,
       carry__h19250,
       carry__h19253,
       carry__h19256,
       carry__h20392,
       carry__h20395,
       carry__h21077,
       carry__h21080,
       carry__h21083,
       carry__h21764,
       carry__h21767,
       carry__h21770,
       carry__h22909,
       carry__h23591,
       carry__h23594,
       carry__h23597,
       carry__h24278,
       carry__h24281,
       carry__h24284,
       carry__h245,
       carry__h247,
       carry__h249,
       carry__h251,
       carry__h253,
       carry__h255,
       carry__h257,
       carry__h26105,
       carry__h26108,
       carry__h26111,
       carry__h26792,
       carry__h26795,
       carry__h26798,
       carry__h2721,
       carry__h28619,
       carry__h28622,
       carry__h28625,
       carry__h29306,
       carry__h29309,
       carry__h29312,
       carry__h3108,
       carry__h31136,
       carry__h31139,
       carry__h31820,
       carry__h31823,
       carry__h31826,
       carry__h33653,
       carry__h34334,
       carry__h34337,
       carry__h34340,
       carry__h3495,
       carry__h36848,
       carry__h36851,
       carry__h36854,
       carry__h3882,
       carry__h39362,
       carry__h39365,
       carry__h39368,
       carry__h41879,
       carry__h41882,
       carry__h4267,
       carry__h4269,
       carry__h44396,
       carry__h4654,
       carry__h4656,
       carry__h48048,
       carry__h48051,
       carry__h48054,
       carry__h48737,
       carry__h48740,
       carry__h48743,
       carry__h49426,
       carry__h49429,
       carry__h49432,
       carry__h50115,
       carry__h50118,
       carry__h50121,
       carry__h5041,
       carry__h5043,
       carry__h50804,
       carry__h50807,
       carry__h50810,
       carry__h51493,
       carry__h51496,
       carry__h51499,
       carry__h52181,
       carry__h52184,
       carry__h52187,
       carry__h5428,
       carry__h5430,
       carry__h569,
       carry__h572,
       carry__h575,
       carry__h5813,
       carry__h5815,
       carry__h5817,
       carry__h6200,
       carry__h6202,
       carry__h6204,
       carry__h6385,
       carry__h6587,
       carry__h6589,
       carry__h6591,
       carry__h6769,
       carry__h6772,
       x__h10177,
       x__h10179,
       x__h10192,
       x__h10194,
       x__h10466,
       x__h10592,
       x__h10675,
       x__h10758,
       x__h10832,
       x__h10834,
       x__h10847,
       x__h10849,
       x__h10862,
       x__h10864,
       x__h10877,
       x__h10879,
       x__h11154,
       x__h11280,
       x__h11363,
       x__h11446,
       x__h11520,
       x__h11522,
       x__h11535,
       x__h11537,
       x__h11550,
       x__h11552,
       x__h11565,
       x__h11567,
       x__h11841,
       x__h11967,
       x__h12050,
       x__h12133,
       x__h12207,
       x__h12209,
       x__h12222,
       x__h12224,
       x__h12237,
       x__h12239,
       x__h12441,
       x__h12706,
       x__h12708,
       x__h12980,
       x__h13106,
       x__h13189,
       x__h13272,
       x__h13346,
       x__h13348,
       x__h13361,
       x__h13363,
       x__h13376,
       x__h13378,
       x__h13391,
       x__h13393,
       x__h13668,
       x__h13794,
       x__h13877,
       x__h13960,
       x__h14034,
       x__h14036,
       x__h14049,
       x__h14051,
       x__h14064,
       x__h14066,
       x__h14079,
       x__h14081,
       x__h14355,
       x__h14481,
       x__h14564,
       x__h14647,
       x__h14721,
       x__h14723,
       x__h14736,
       x__h14738,
       x__h14751,
       x__h14753,
       x__h15494,
       x__h15620,
       x__h15703,
       x__h15786,
       x__h15860,
       x__h15862,
       x__h15875,
       x__h15877,
       x__h15890,
       x__h15892,
       x__h15905,
       x__h15907,
       x__h16182,
       x__h16308,
       x__h16391,
       x__h16474,
       x__h16548,
       x__h16550,
       x__h16563,
       x__h16565,
       x__h16578,
       x__h16580,
       x__h16593,
       x__h16595,
       x__h16869,
       x__h16995,
       x__h17078,
       x__h17161,
       x__h17235,
       x__h17237,
       x__h17250,
       x__h17252,
       x__h17265,
       x__h17267,
       x__h18008,
       x__h18134,
       x__h18217,
       x__h18300,
       x__h18389,
       x__h18391,
       x__h18404,
       x__h18406,
       x__h18419,
       x__h18421,
       x__h18696,
       x__h18822,
       x__h18905,
       x__h18988,
       x__h19062,
       x__h19064,
       x__h19077,
       x__h19079,
       x__h19092,
       x__h19094,
       x__h19107,
       x__h19109,
       x__h19383,
       x__h19509,
       x__h19592,
       x__h19675,
       x__h19749,
       x__h19751,
       x__h19764,
       x__h19766,
       x__h19779,
       x__h19781,
       x__h20522,
       x__h20648,
       x__h20731,
       x__h20918,
       x__h20920,
       x__h20933,
       x__h20935,
       x__h21210,
       x__h21336,
       x__h21419,
       x__h21502,
       x__h21576,
       x__h21578,
       x__h21591,
       x__h21593,
       x__h21606,
       x__h21608,
       x__h21621,
       x__h21623,
       x__h21897,
       x__h22023,
       x__h22106,
       x__h22189,
       x__h22263,
       x__h22265,
       x__h22278,
       x__h22280,
       x__h22293,
       x__h22295,
       x__h23036,
       x__h23162,
       x__h23447,
       x__h23449,
       x__h23724,
       x__h23850,
       x__h23933,
       x__h24016,
       x__h24090,
       x__h24092,
       x__h24105,
       x__h24107,
       x__h24120,
       x__h24122,
       x__h24135,
       x__h24137,
       x__h24411,
       x__h24537,
       x__h24620,
       x__h24703,
       x__h24777,
       x__h24779,
       x__h24792,
       x__h24794,
       x__h24807,
       x__h24809,
       x__h25550,
       x__h26238,
       x__h26364,
       x__h26447,
       x__h26530,
       x__h26604,
       x__h26606,
       x__h26619,
       x__h26621,
       x__h26634,
       x__h26636,
       x__h26649,
       x__h26651,
       x__h26925,
       x__h27051,
       x__h27134,
       x__h27217,
       x__h27291,
       x__h27293,
       x__h27306,
       x__h27308,
       x__h27321,
       x__h27323,
       x__h28752,
       x__h28878,
       x__h28961,
       x__h29044,
       x__h29133,
       x__h29135,
       x__h29148,
       x__h29150,
       x__h29163,
       x__h29165,
       x__h29439,
       x__h29565,
       x__h29648,
       x__h29731,
       x__h29805,
       x__h29807,
       x__h29820,
       x__h29822,
       x__h29835,
       x__h29837,
       x__h31266,
       x__h31392,
       x__h31475,
       x__h31662,
       x__h31664,
       x__h31677,
       x__h31679,
       x__h31953,
       x__h32079,
       x__h32162,
       x__h32245,
       x__h32319,
       x__h32321,
       x__h32334,
       x__h32336,
       x__h32349,
       x__h32351,
       x__h33780,
       x__h33906,
       x__h34191,
       x__h34193,
       x__h34467,
       x__h34593,
       x__h34676,
       x__h34759,
       x__h34833,
       x__h34835,
       x__h34848,
       x__h34850,
       x__h34863,
       x__h34865,
       x__h36294,
       x__h36981,
       x__h37107,
       x__h37190,
       x__h37273,
       x__h37347,
       x__h37349,
       x__h37362,
       x__h37364,
       x__h37377,
       x__h37379,
       x__h39495,
       x__h39621,
       x__h39704,
       x__h39787,
       x__h39876,
       x__h39878,
       x__h39891,
       x__h39893,
       x__h42009,
       x__h42135,
       x__h42218,
       x__h42405,
       x__h42407,
       x__h44523,
       x__h44649,
       x__h47037,
       x__h47642,
       x__h47725,
       x__h47877,
       x__h47879,
       x__h47892,
       x__h47894,
       x__h47907,
       x__h47909,
       x__h48181,
       x__h48308,
       x__h48391,
       x__h48474,
       x__h48548,
       x__h48550,
       x__h48563,
       x__h48565,
       x__h48578,
       x__h48580,
       x__h48593,
       x__h48595,
       x__h48870,
       x__h48997,
       x__h49080,
       x__h49163,
       x__h49237,
       x__h49239,
       x__h49252,
       x__h49254,
       x__h49267,
       x__h49269,
       x__h49282,
       x__h49284,
       x__h49559,
       x__h49686,
       x__h49769,
       x__h49852,
       x__h49926,
       x__h49928,
       x__h49941,
       x__h49943,
       x__h49956,
       x__h49958,
       x__h49971,
       x__h49973,
       x__h50248,
       x__h50375,
       x__h50458,
       x__h50541,
       x__h50615,
       x__h50617,
       x__h50630,
       x__h50632,
       x__h50645,
       x__h50647,
       x__h50660,
       x__h50662,
       x__h50937,
       x__h51064,
       x__h51147,
       x__h51230,
       x__h51304,
       x__h51306,
       x__h51319,
       x__h51321,
       x__h51334,
       x__h51336,
       x__h51349,
       x__h51351,
       x__h51626,
       x__h51753,
       x__h51836,
       x__h51919,
       x__h51993,
       x__h51995,
       x__h52008,
       x__h52010,
       x__h52023,
       x__h52025,
       x__h52038,
       x__h52040,
       x__h52314,
       x__h52441,
       x__h52524,
       x__h52607,
       x__h52681,
       x__h52683,
       x__h52696,
       x__h52698,
       x__h52711,
       x__h52713,
       x__h6125,
       x__h6512,
       x__h6899,
       x__h703,
       x__h9927,
       y__h10178,
       y__h10180,
       y__h10193,
       y__h10195,
       y__h10833,
       y__h10835,
       y__h10848,
       y__h10850,
       y__h10863,
       y__h10865,
       y__h10878,
       y__h10880,
       y__h11521,
       y__h11523,
       y__h11536,
       y__h11538,
       y__h11551,
       y__h11553,
       y__h11566,
       y__h11568,
       y__h12208,
       y__h12210,
       y__h12223,
       y__h12225,
       y__h12238,
       y__h12240,
       y__h12707,
       y__h12709,
       y__h13347,
       y__h13349,
       y__h13362,
       y__h13364,
       y__h13377,
       y__h13379,
       y__h13392,
       y__h13394,
       y__h14035,
       y__h14037,
       y__h14050,
       y__h14052,
       y__h14065,
       y__h14067,
       y__h14080,
       y__h14082,
       y__h14722,
       y__h14724,
       y__h14737,
       y__h14739,
       y__h14752,
       y__h14754,
       y__h15861,
       y__h15863,
       y__h15876,
       y__h15878,
       y__h15891,
       y__h15893,
       y__h15906,
       y__h15908,
       y__h16549,
       y__h16551,
       y__h16564,
       y__h16566,
       y__h16579,
       y__h16581,
       y__h16594,
       y__h16596,
       y__h17236,
       y__h17238,
       y__h17251,
       y__h17253,
       y__h17266,
       y__h17268,
       y__h18390,
       y__h18392,
       y__h18405,
       y__h18407,
       y__h18420,
       y__h18422,
       y__h19063,
       y__h19065,
       y__h19078,
       y__h19080,
       y__h19093,
       y__h19095,
       y__h19108,
       y__h19110,
       y__h19750,
       y__h19752,
       y__h19765,
       y__h19767,
       y__h19780,
       y__h19782,
       y__h20919,
       y__h20921,
       y__h20934,
       y__h20936,
       y__h21577,
       y__h21579,
       y__h21592,
       y__h21594,
       y__h21607,
       y__h21609,
       y__h21622,
       y__h21624,
       y__h22264,
       y__h22266,
       y__h22279,
       y__h22281,
       y__h22294,
       y__h22296,
       y__h23448,
       y__h23450,
       y__h24091,
       y__h24093,
       y__h24106,
       y__h24108,
       y__h24121,
       y__h24123,
       y__h24136,
       y__h24138,
       y__h24778,
       y__h24780,
       y__h24793,
       y__h24795,
       y__h24808,
       y__h24810,
       y__h26605,
       y__h26607,
       y__h26620,
       y__h26622,
       y__h26635,
       y__h26637,
       y__h26650,
       y__h26652,
       y__h27292,
       y__h27294,
       y__h27307,
       y__h27309,
       y__h27322,
       y__h27324,
       y__h29134,
       y__h29136,
       y__h29149,
       y__h29151,
       y__h29164,
       y__h29166,
       y__h29806,
       y__h29808,
       y__h29821,
       y__h29823,
       y__h29836,
       y__h29838,
       y__h31663,
       y__h31665,
       y__h31678,
       y__h31680,
       y__h32320,
       y__h32322,
       y__h32335,
       y__h32337,
       y__h32350,
       y__h32352,
       y__h34192,
       y__h34194,
       y__h34834,
       y__h34836,
       y__h34849,
       y__h34851,
       y__h34864,
       y__h34866,
       y__h37348,
       y__h37350,
       y__h37363,
       y__h37365,
       y__h37378,
       y__h37380,
       y__h39877,
       y__h39879,
       y__h39892,
       y__h39894,
       y__h42406,
       y__h42408,
       y__h47878,
       y__h47880,
       y__h47893,
       y__h47895,
       y__h47908,
       y__h47910,
       y__h48549,
       y__h48551,
       y__h48564,
       y__h48566,
       y__h48579,
       y__h48581,
       y__h48594,
       y__h48596,
       y__h49238,
       y__h49240,
       y__h49253,
       y__h49255,
       y__h49268,
       y__h49270,
       y__h49283,
       y__h49285,
       y__h49927,
       y__h49929,
       y__h49942,
       y__h49944,
       y__h49957,
       y__h49959,
       y__h49972,
       y__h49974,
       y__h50616,
       y__h50618,
       y__h50631,
       y__h50633,
       y__h50646,
       y__h50648,
       y__h50661,
       y__h50663,
       y__h51305,
       y__h51307,
       y__h51320,
       y__h51322,
       y__h51335,
       y__h51337,
       y__h51350,
       y__h51352,
       y__h51994,
       y__h51996,
       y__h52009,
       y__h52011,
       y__h52024,
       y__h52026,
       y__h52039,
       y__h52041,
       y__h52682,
       y__h52684,
       y__h52697,
       y__h52699,
       y__h52712,
       y__h52714;

  // action method get_inp
  assign RDY_get_inp = state == 2'd0 ;
  assign CAN_FIRE_get_inp = state == 2'd0 ;
  assign WILL_FIRE_get_inp = EN_get_inp ;

  // value method send_out
  assign send_out = result ;
  assign RDY_send_out = state == 2'd2 ;

  // rule RL_rl_compute
  assign CAN_FIRE_RL_rl_compute = state == 2'd1 ;
  assign WILL_FIRE_RL_rl_compute = CAN_FIRE_RL_rl_compute ;

  // register inp_A
  assign inp_A_D_IN = { {8{get_inp_a[7]}}, get_inp_a } ;
  assign inp_A_EN = EN_get_inp ;

  // register inp_B
  assign inp_B_D_IN = { {8{get_inp_b[7]}}, get_inp_b } ;
  assign inp_B_EN = EN_get_inp ;

  // register inp_C
  assign inp_C_D_IN = get_inp_c ;
  assign inp_C_EN = EN_get_inp ;

  // register result
  assign result_D_IN =
	     { spliced_bits__h264,
	       spliced_bits__h309,
	       spliced_bits__h339,
	       spliced_bits__h369,
	       spliced_bits__h399,
	       spliced_bits__h429,
	       spliced_bits__h459,
	       spliced_bits__h489 } ;
  assign result_EN = CAN_FIRE_RL_rl_compute ;

  // register state
  assign state_D_IN = EN_get_inp ? 2'd1 : 2'd2 ;
  assign state_EN = EN_get_inp || WILL_FIRE_RL_rl_compute ;

  // remaining internal signals
  assign IF_inp_B_BITS_15_TO_11_42_EQ_0_43_THEN_IF_inp__ETC___d1003 =
	     (inp_B[15:11] == 5'd0) ?
	       IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889 :
	       ((inp_B[15:12] == 4'd0) ?
		  IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927 :
		  IF_inp_B_BITS_15_TO_13_28_EQ_0_29_THEN_IF_inp__ETC___d1001) ;
  assign IF_inp_B_BITS_15_TO_13_28_EQ_0_29_THEN_IF_inp__ETC___d1001 =
	     (inp_B[15:13] == 3'd0) ?
	       IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957 :
	       ((inp_B[15:14] == 2'd0) ?
		  IF_inp_B_BIT_13_60_THEN_IF_inp_B_BIT_12_30_THE_ETC___d980 :
		  IF_inp_B_BIT_15_81_THEN_IF_inp_B_BIT_15_81_THE_ETC___d999) ;
  assign IF_inp_B_BITS_15_TO_1_EQ_0_THEN_IF_inp_B_BIT_0_ETC___d1013 =
	     (inp_B[15:1] == 15'd0) ?
	       IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9 :
	       ((inp_B[15:2] == 14'd0) ?
		  IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149 :
		  IF_inp_B_BITS_15_TO_3_50_EQ_0_51_THEN_IF_inp_B_ETC___d1011) ;
  assign IF_inp_B_BITS_15_TO_3_50_EQ_0_51_THEN_IF_inp_B_ETC___d1011 =
	     (inp_B[15:3] == 13'd0) ?
	       IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265 :
	       ((inp_B[15:4] == 12'd0) ?
		  IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373 :
		  IF_inp_B_BITS_15_TO_5_74_EQ_0_75_THEN_IF_inp_B_ETC___d1009) ;
  assign IF_inp_B_BITS_15_TO_5_74_EQ_0_75_THEN_IF_inp_B_ETC___d1009 =
	     (inp_B[15:5] == 11'd0) ?
	       IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472 :
	       ((inp_B[15:6] == 10'd0) ?
		  IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564 :
		  IF_inp_B_BITS_15_TO_7_65_EQ_0_66_THEN_IF_inp_B_ETC___d1007) ;
  assign IF_inp_B_BITS_15_TO_7_65_EQ_0_66_THEN_IF_inp_B_ETC___d1007 =
	     (inp_B[15:7] == 9'd0) ?
	       IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647 :
	       ((inp_B[15:8] == 8'd0) ?
		  IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720 :
		  IF_inp_B_BITS_15_TO_9_21_EQ_0_22_THEN_IF_inp_B_ETC___d1005) ;
  assign IF_inp_B_BITS_15_TO_9_21_EQ_0_22_THEN_IF_inp_B_ETC___d1005 =
	     (inp_B[15:9] == 7'd0) ?
	       IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784 :
	       ((inp_B[15:10] == 6'd0) ?
		  IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841 :
		  IF_inp_B_BITS_15_TO_11_42_EQ_0_43_THEN_IF_inp__ETC___d1003) ;
  assign IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9 = inp_B[0] ? inp_A : 16'd0 ;
  assign IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889 =
	     inp_B[10] ?
	       product__h3097 :
	       IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841 ;
  assign IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927 =
	     inp_B[11] ?
	       product__h2710 :
	       IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889 ;
  assign IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957 =
	     inp_B[12] ?
	       product__h2323 :
	       IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927 ;
  assign IF_inp_B_BIT_13_60_THEN_IF_inp_B_BIT_12_30_THE_ETC___d980 =
	     inp_B[13] ?
	       product__h1936 :
	       IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957 ;
  assign IF_inp_B_BIT_14_82_THEN_IF_inp_B_BIT_13_60_THE_ETC___d993 =
	     inp_B[14] ?
	       product__h1549 :
	       IF_inp_B_BIT_13_60_THEN_IF_inp_B_BIT_12_30_THE_ETC___d980 ;
  assign IF_inp_B_BIT_15_81_THEN_IF_inp_B_BIT_15_81_THE_ETC___d999 =
	     inp_B[15] ?
	       (inp_B[15] ?
		  product__h1162 :
		  IF_inp_B_BIT_14_82_THEN_IF_inp_B_BIT_13_60_THE_ETC___d993) :
	       IF_inp_B_BIT_14_82_THEN_IF_inp_B_BIT_13_60_THE_ETC___d993 ;
  assign IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149 =
	     inp_B[1] ?
	       product__h6580 :
	       IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9 ;
  assign IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265 =
	     inp_B[2] ?
	       product__h6193 :
	       IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149 ;
  assign IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373 =
	     inp_B[3] ?
	       product__h5806 :
	       IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265 ;
  assign IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472 =
	     inp_B[4] ?
	       product__h5419 :
	       IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373 ;
  assign IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564 =
	     inp_B[5] ?
	       product__h5032 :
	       IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472 ;
  assign IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647 =
	     inp_B[6] ?
	       product__h4645 :
	       IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564 ;
  assign IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720 =
	     inp_B[7] ?
	       product__h4258 :
	       IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647 ;
  assign IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784 =
	     inp_B[8] ?
	       product__h3871 :
	       IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720 ;
  assign IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841 =
	     inp_B[9] ?
	       product__h3484 :
	       IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784 ;
  assign SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015 =
	     { {16{x__h748[15]}}, x__h748 } ;
  assign carry__h10333 = x__h10832 | y__h10833 ;
  assign carry__h10336 = x__h10847 | y__h10848 ;
  assign carry__h10339 = x__h10862 | y__h10863 ;
  assign carry__h11021 = x__h11520 | y__h11521 ;
  assign carry__h11024 = x__h11535 | y__h11536 ;
  assign carry__h11027 = x__h11550 | y__h11551 ;
  assign carry__h11708 = x__h12207 | y__h12208 ;
  assign carry__h11711 = x__h12222 | y__h12223 ;
  assign carry__h11714 = x__h12237 | y__h12238 ;
  assign carry__h12847 = x__h13346 | y__h13347 ;
  assign carry__h12850 = x__h13361 | y__h13362 ;
  assign carry__h12853 = x__h13376 | y__h13377 ;
  assign carry__h13535 = x__h14034 | y__h14035 ;
  assign carry__h13538 = x__h14049 | y__h14050 ;
  assign carry__h13541 = x__h14064 | y__h14065 ;
  assign carry__h14222 = x__h14721 | y__h14722 ;
  assign carry__h14225 = x__h14736 | y__h14737 ;
  assign carry__h14228 = x__h14751 | y__h14752 ;
  assign carry__h15361 = x__h15860 | y__h15861 ;
  assign carry__h15364 = x__h15875 | y__h15876 ;
  assign carry__h15367 = x__h15890 | y__h15891 ;
  assign carry__h16049 = x__h16548 | y__h16549 ;
  assign carry__h16052 = x__h16563 | y__h16564 ;
  assign carry__h16055 = x__h16578 | y__h16579 ;
  assign carry__h16736 = x__h17235 | y__h17236 ;
  assign carry__h16739 = x__h17250 | y__h17251 ;
  assign carry__h16742 = x__h17265 | y__h17266 ;
  assign carry__h17875 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[4] &
	     inp_A[0] ;
  assign carry__h17878 = x__h18389 | y__h18390 ;
  assign carry__h17881 = x__h18404 | y__h18405 ;
  assign carry__h18563 = x__h19062 | y__h19063 ;
  assign carry__h18566 = x__h19077 | y__h19078 ;
  assign carry__h18569 = x__h19092 | y__h19093 ;
  assign carry__h19250 = x__h19749 | y__h19750 ;
  assign carry__h19253 = x__h19764 | y__h19765 ;
  assign carry__h19256 = x__h19779 | y__h19780 ;
  assign carry__h20392 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[5] &
	     inp_A[0] ;
  assign carry__h20395 = x__h20918 | y__h20919 ;
  assign carry__h21077 = x__h21576 | y__h21577 ;
  assign carry__h21080 = x__h21591 | y__h21592 ;
  assign carry__h21083 = x__h21606 | y__h21607 ;
  assign carry__h21764 = x__h22263 | y__h22264 ;
  assign carry__h21767 = x__h22278 | y__h22279 ;
  assign carry__h21770 = x__h22293 | y__h22294 ;
  assign carry__h22909 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[6] &
	     inp_A[0] ;
  assign carry__h23591 = x__h24090 | y__h24091 ;
  assign carry__h23594 = x__h24105 | y__h24106 ;
  assign carry__h23597 = x__h24120 | y__h24121 ;
  assign carry__h24278 = x__h24777 | y__h24778 ;
  assign carry__h24281 = x__h24792 | y__h24793 ;
  assign carry__h24284 = x__h24807 | y__h24808 ;
  assign carry__h245 = x__h47907 | y__h47908 ;
  assign carry__h247 = x__h48593 | y__h48594 ;
  assign carry__h249 = x__h49282 | y__h49283 ;
  assign carry__h251 = x__h49971 | y__h49972 ;
  assign carry__h253 = x__h50660 | y__h50661 ;
  assign carry__h255 = x__h51349 | y__h51350 ;
  assign carry__h257 = x__h52038 | y__h52039 ;
  assign carry__h26105 = x__h26604 | y__h26605 ;
  assign carry__h26108 = x__h26619 | y__h26620 ;
  assign carry__h26111 = x__h26634 | y__h26635 ;
  assign carry__h26792 = x__h27291 | y__h27292 ;
  assign carry__h26795 = x__h27306 | y__h27307 ;
  assign carry__h26798 = x__h27321 | y__h27322 ;
  assign carry__h2721 =
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[11] &
	     inp_A[0] ;
  assign carry__h28619 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[8] &
	     inp_A[0] ;
  assign carry__h28622 = x__h29133 | y__h29134 ;
  assign carry__h28625 = x__h29148 | y__h29149 ;
  assign carry__h29306 = x__h29805 | y__h29806 ;
  assign carry__h29309 = x__h29820 | y__h29821 ;
  assign carry__h29312 = x__h29835 | y__h29836 ;
  assign carry__h3108 = x__h34191 | y__h34192 ;
  assign carry__h31136 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[9] &
	     inp_A[0] ;
  assign carry__h31139 = x__h31662 | y__h31663 ;
  assign carry__h31820 = x__h32319 | y__h32320 ;
  assign carry__h31823 = x__h32334 | y__h32335 ;
  assign carry__h31826 = x__h32349 | y__h32350 ;
  assign carry__h33653 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[10] &
	     inp_A[0] ;
  assign carry__h34334 = x__h34833 | y__h34834 ;
  assign carry__h34337 = x__h34848 | y__h34849 ;
  assign carry__h34340 = x__h34863 | y__h34864 ;
  assign carry__h3495 = x__h31677 | y__h31678 ;
  assign carry__h36848 = x__h37347 | y__h37348 ;
  assign carry__h36851 = x__h37362 | y__h37363 ;
  assign carry__h36854 = x__h37377 | y__h37378 ;
  assign carry__h3882 = x__h29163 | y__h29164 ;
  assign carry__h39362 =
	     IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927[12] &
	     inp_A[0] ;
  assign carry__h39365 = x__h39876 | y__h39877 ;
  assign carry__h39368 = x__h39891 | y__h39892 ;
  assign carry__h41879 =
	     IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957[13] &
	     inp_A[0] ;
  assign carry__h41882 = x__h42405 | y__h42406 ;
  assign carry__h4267 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[7] &
	     inp_A[0] ;
  assign carry__h4269 = x__h26649 | y__h26650 ;
  assign carry__h44396 =
	     IF_inp_B_BIT_13_60_THEN_IF_inp_B_BIT_12_30_THE_ETC___d980[14] &
	     inp_A[0] ;
  assign carry__h4654 = x__h23447 | y__h23448 ;
  assign carry__h4656 = x__h24135 | y__h24136 ;
  assign carry__h48048 = x__h48548 | y__h48549 ;
  assign carry__h48051 = x__h48563 | y__h48564 ;
  assign carry__h48054 = x__h48578 | y__h48579 ;
  assign carry__h48737 = x__h49237 | y__h49238 ;
  assign carry__h48740 = x__h49252 | y__h49253 ;
  assign carry__h48743 = x__h49267 | y__h49268 ;
  assign carry__h49426 = x__h49926 | y__h49927 ;
  assign carry__h49429 = x__h49941 | y__h49942 ;
  assign carry__h49432 = x__h49956 | y__h49957 ;
  assign carry__h50115 = x__h50615 | y__h50616 ;
  assign carry__h50118 = x__h50630 | y__h50631 ;
  assign carry__h50121 = x__h50645 | y__h50646 ;
  assign carry__h5041 = x__h20933 | y__h20934 ;
  assign carry__h5043 = x__h21621 | y__h21622 ;
  assign carry__h50804 = x__h51304 | y__h51305 ;
  assign carry__h50807 = x__h51319 | y__h51320 ;
  assign carry__h50810 = x__h51334 | y__h51335 ;
  assign carry__h51493 = x__h51993 | y__h51994 ;
  assign carry__h51496 = x__h52008 | y__h52009 ;
  assign carry__h51499 = x__h52023 | y__h52024 ;
  assign carry__h52181 = x__h52681 | y__h52682 ;
  assign carry__h52184 = x__h52696 | y__h52697 ;
  assign carry__h52187 = x__h52711 | y__h52712 ;
  assign carry__h5428 = x__h18419 | y__h18420 ;
  assign carry__h5430 = x__h19107 | y__h19108 ;
  assign carry__h569 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[0] &
	     inp_C[0] ;
  assign carry__h572 = x__h47877 | y__h47878 ;
  assign carry__h575 = x__h47892 | y__h47893 ;
  assign carry__h5813 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[3] &
	     inp_A[0] ;
  assign carry__h5815 = x__h15905 | y__h15906 ;
  assign carry__h5817 = x__h16593 | y__h16594 ;
  assign carry__h6200 = x__h12706 | y__h12707 ;
  assign carry__h6202 = x__h13391 | y__h13392 ;
  assign carry__h6204 = x__h14079 | y__h14080 ;
  assign carry__h6385 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[2] &
	     inp_A[0] ;
  assign carry__h6587 = x__h10192 | y__h10193 ;
  assign carry__h6589 = x__h10877 | y__h10878 ;
  assign carry__h6591 = x__h11565 | y__h11566 ;
  assign carry__h6769 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[1] & inp_A[0] ;
  assign carry__h6772 = x__h10177 | y__h10178 ;
  assign product__h1162 =
	     { x__h47037,
	       IF_inp_B_BIT_14_82_THEN_IF_inp_B_BIT_13_60_THE_ETC___d993[14:0] } ;
  assign product__h1549 =
	     { spliced_bits__h1566,
	       IF_inp_B_BIT_13_60_THEN_IF_inp_B_BIT_12_30_THE_ETC___d980[11:0] } ;
  assign product__h1936 =
	     { spliced_bits__h1953,
	       IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957[11:0] } ;
  assign product__h2323 =
	     { spliced_bits__h2340,
	       IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927[11:0] } ;
  assign product__h2710 =
	     { spliced_bits__h2727,
	       x__h36294,
	       IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[10:0] } ;
  assign product__h3097 =
	     { spliced_bits__h3114,
	       spliced_bits__h3144,
	       IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[7:0] } ;
  assign product__h3484 =
	     { spliced_bits__h3501,
	       spliced_bits__h3531,
	       IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[7:0] } ;
  assign product__h3871 =
	     { spliced_bits__h3888,
	       spliced_bits__h3918,
	       IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[7:0] } ;
  assign product__h4258 =
	     { spliced_bits__h4275,
	       spliced_bits__h4305,
	       x__h25550,
	       IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[6:0] } ;
  assign product__h4645 =
	     { spliced_bits__h4662,
	       spliced_bits__h4692,
	       spliced_bits__h4722,
	       IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[3:0] } ;
  assign product__h5032 =
	     { spliced_bits__h5049,
	       spliced_bits__h5079,
	       spliced_bits__h5109,
	       IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[3:0] } ;
  assign product__h5419 =
	     { spliced_bits__h5436,
	       spliced_bits__h5466,
	       spliced_bits__h5496,
	       IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[3:0] } ;
  assign product__h5806 =
	     { spliced_bits__h5823,
	       spliced_bits__h5853,
	       spliced_bits__h5883,
	       spliced_bits__h5913 } ;
  assign product__h6193 =
	     { spliced_bits__h6210,
	       spliced_bits__h6240,
	       spliced_bits__h6270,
	       spliced_bits__h6300 } ;
  assign product__h6580 =
	     { spliced_bits__h6597,
	       spliced_bits__h6627,
	       spliced_bits__h6657,
	       spliced_bits__h6687 } ;
  assign spliced_bits__h1566 =
	     { x__h44523 ^ carry__h44396,
	       x__h44649,
	       IF_inp_B_BIT_13_60_THEN_IF_inp_B_BIT_12_30_THE_ETC___d980[13:12] } ;
  assign spliced_bits__h1953 =
	     { x__h42009 ^ carry__h41882,
	       x__h42135 ^ carry__h41879,
	       x__h42218,
	       IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957[12] } ;
  assign spliced_bits__h2340 =
	     { x__h39495 ^ carry__h39368,
	       x__h39621 ^ carry__h39365,
	       x__h39704 ^ carry__h39362,
	       x__h39787 } ;
  assign spliced_bits__h264 =
	     { x__h52314 ^ carry__h52187,
	       x__h52441 ^ carry__h52184,
	       x__h52524 ^ carry__h52181,
	       x__h52607 ^ carry__h257 } ;
  assign spliced_bits__h2727 =
	     { x__h36981 ^ carry__h36854,
	       x__h37107 ^ carry__h36851,
	       x__h37190 ^ carry__h36848,
	       x__h37273 ^ carry__h2721 } ;
  assign spliced_bits__h309 =
	     { x__h51626 ^ carry__h51499,
	       x__h51753 ^ carry__h51496,
	       x__h51836 ^ carry__h51493,
	       x__h51919 ^ carry__h255 } ;
  assign spliced_bits__h3114 =
	     { x__h34467 ^ carry__h34340,
	       x__h34593 ^ carry__h34337,
	       x__h34676 ^ carry__h34334,
	       x__h34759 ^ carry__h3108 } ;
  assign spliced_bits__h3144 =
	     { x__h33780 ^ carry__h33653,
	       x__h33906,
	       IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[9:8] } ;
  assign spliced_bits__h339 =
	     { x__h50937 ^ carry__h50810,
	       x__h51064 ^ carry__h50807,
	       x__h51147 ^ carry__h50804,
	       x__h51230 ^ carry__h253 } ;
  assign spliced_bits__h3501 =
	     { x__h31953 ^ carry__h31826,
	       x__h32079 ^ carry__h31823,
	       x__h32162 ^ carry__h31820,
	       x__h32245 ^ carry__h3495 } ;
  assign spliced_bits__h3531 =
	     { x__h31266 ^ carry__h31139,
	       x__h31392 ^ carry__h31136,
	       x__h31475,
	       IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[8] } ;
  assign spliced_bits__h369 =
	     { x__h50248 ^ carry__h50121,
	       x__h50375 ^ carry__h50118,
	       x__h50458 ^ carry__h50115,
	       x__h50541 ^ carry__h251 } ;
  assign spliced_bits__h3888 =
	     { x__h29439 ^ carry__h29312,
	       x__h29565 ^ carry__h29309,
	       x__h29648 ^ carry__h29306,
	       x__h29731 ^ carry__h3882 } ;
  assign spliced_bits__h3918 =
	     { x__h28752 ^ carry__h28625,
	       x__h28878 ^ carry__h28622,
	       x__h28961 ^ carry__h28619,
	       x__h29044 } ;
  assign spliced_bits__h399 =
	     { x__h49559 ^ carry__h49432,
	       x__h49686 ^ carry__h49429,
	       x__h49769 ^ carry__h49426,
	       x__h49852 ^ carry__h249 } ;
  assign spliced_bits__h4275 =
	     { x__h26925 ^ carry__h26798,
	       x__h27051 ^ carry__h26795,
	       x__h27134 ^ carry__h26792,
	       x__h27217 ^ carry__h4269 } ;
  assign spliced_bits__h429 =
	     { x__h48870 ^ carry__h48743,
	       x__h48997 ^ carry__h48740,
	       x__h49080 ^ carry__h48737,
	       x__h49163 ^ carry__h247 } ;
  assign spliced_bits__h4305 =
	     { x__h26238 ^ carry__h26111,
	       x__h26364 ^ carry__h26108,
	       x__h26447 ^ carry__h26105,
	       x__h26530 ^ carry__h4267 } ;
  assign spliced_bits__h459 =
	     { x__h48181 ^ carry__h48054,
	       x__h48308 ^ carry__h48051,
	       x__h48391 ^ carry__h48048,
	       x__h48474 ^ carry__h245 } ;
  assign spliced_bits__h4662 =
	     { x__h24411 ^ carry__h24284,
	       x__h24537 ^ carry__h24281,
	       x__h24620 ^ carry__h24278,
	       x__h24703 ^ carry__h4656 } ;
  assign spliced_bits__h4692 =
	     { x__h23724 ^ carry__h23597,
	       x__h23850 ^ carry__h23594,
	       x__h23933 ^ carry__h23591,
	       x__h24016 ^ carry__h4654 } ;
  assign spliced_bits__h4722 =
	     { x__h23036 ^ carry__h22909,
	       x__h23162,
	       IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[5:4] } ;
  assign spliced_bits__h489 =
	     { x__h703 ^ carry__h575,
	       x__h47642 ^ carry__h572,
	       x__h47725 ^ carry__h569,
	       SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[0] ^
	       inp_C[0] } ;
  assign spliced_bits__h5049 =
	     { x__h21897 ^ carry__h21770,
	       x__h22023 ^ carry__h21767,
	       x__h22106 ^ carry__h21764,
	       x__h22189 ^ carry__h5043 } ;
  assign spliced_bits__h5079 =
	     { x__h21210 ^ carry__h21083,
	       x__h21336 ^ carry__h21080,
	       x__h21419 ^ carry__h21077,
	       x__h21502 ^ carry__h5041 } ;
  assign spliced_bits__h5109 =
	     { x__h20522 ^ carry__h20395,
	       x__h20648 ^ carry__h20392,
	       x__h20731,
	       IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[4] } ;
  assign spliced_bits__h5436 =
	     { x__h19383 ^ carry__h19256,
	       x__h19509 ^ carry__h19253,
	       x__h19592 ^ carry__h19250,
	       x__h19675 ^ carry__h5430 } ;
  assign spliced_bits__h5466 =
	     { x__h18696 ^ carry__h18569,
	       x__h18822 ^ carry__h18566,
	       x__h18905 ^ carry__h18563,
	       x__h18988 ^ carry__h5428 } ;
  assign spliced_bits__h5496 =
	     { x__h18008 ^ carry__h17881,
	       x__h18134 ^ carry__h17878,
	       x__h18217 ^ carry__h17875,
	       x__h18300 } ;
  assign spliced_bits__h5823 =
	     { x__h16869 ^ carry__h16742,
	       x__h16995 ^ carry__h16739,
	       x__h17078 ^ carry__h16736,
	       x__h17161 ^ carry__h5817 } ;
  assign spliced_bits__h5853 =
	     { x__h16182 ^ carry__h16055,
	       x__h16308 ^ carry__h16052,
	       x__h16391 ^ carry__h16049,
	       x__h16474 ^ carry__h5815 } ;
  assign spliced_bits__h5883 =
	     { x__h15494 ^ carry__h15367,
	       x__h15620 ^ carry__h15364,
	       x__h15703 ^ carry__h15361,
	       x__h15786 ^ carry__h5813 } ;
  assign spliced_bits__h5913 =
	     { x__h6125,
	       IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[2:0] } ;
  assign spliced_bits__h6210 =
	     { x__h14355 ^ carry__h14228,
	       x__h14481 ^ carry__h14225,
	       x__h14564 ^ carry__h14222,
	       x__h14647 ^ carry__h6204 } ;
  assign spliced_bits__h6240 =
	     { x__h13668 ^ carry__h13541,
	       x__h13794 ^ carry__h13538,
	       x__h13877 ^ carry__h13535,
	       x__h13960 ^ carry__h6202 } ;
  assign spliced_bits__h6270 =
	     { x__h12980 ^ carry__h12853,
	       x__h13106 ^ carry__h12850,
	       x__h13189 ^ carry__h12847,
	       x__h13272 ^ carry__h6200 } ;
  assign spliced_bits__h6300 =
	     { x__h6512 ^ carry__h6385,
	       x__h12441,
	       IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[1:0] } ;
  assign spliced_bits__h6597 =
	     { x__h11841 ^ carry__h11714,
	       x__h11967 ^ carry__h11711,
	       x__h12050 ^ carry__h11708,
	       x__h12133 ^ carry__h6591 } ;
  assign spliced_bits__h6627 =
	     { x__h11154 ^ carry__h11027,
	       x__h11280 ^ carry__h11024,
	       x__h11363 ^ carry__h11021,
	       x__h11446 ^ carry__h6589 } ;
  assign spliced_bits__h6657 =
	     { x__h10466 ^ carry__h10339,
	       x__h10592 ^ carry__h10336,
	       x__h10675 ^ carry__h10333,
	       x__h10758 ^ carry__h6587 } ;
  assign spliced_bits__h6687 =
	     { x__h6899 ^ carry__h6772,
	       x__h9927 ^ carry__h6769,
	       IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[1] ^ inp_A[0],
	       IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[0] } ;
  assign x__h10177 = x__h10179 | y__h10180 ;
  assign x__h10179 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[2] & inp_A[1] ;
  assign x__h10192 = x__h10194 | y__h10195 ;
  assign x__h10194 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[3] & inp_A[2] ;
  assign x__h10466 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[7] ^ inp_A[6] ;
  assign x__h10592 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[6] ^ inp_A[5] ;
  assign x__h10675 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[5] ^ inp_A[4] ;
  assign x__h10758 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[4] ^ inp_A[3] ;
  assign x__h10832 = x__h10834 | y__h10835 ;
  assign x__h10834 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[4] & inp_A[3] ;
  assign x__h10847 = x__h10849 | y__h10850 ;
  assign x__h10849 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[5] & inp_A[4] ;
  assign x__h10862 = x__h10864 | y__h10865 ;
  assign x__h10864 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[6] & inp_A[5] ;
  assign x__h10877 = x__h10879 | y__h10880 ;
  assign x__h10879 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[7] & inp_A[6] ;
  assign x__h11154 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[11] ^ inp_A[10] ;
  assign x__h11280 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[10] ^ inp_A[9] ;
  assign x__h11363 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[9] ^ inp_A[8] ;
  assign x__h11446 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[8] ^ inp_A[7] ;
  assign x__h11520 = x__h11522 | y__h11523 ;
  assign x__h11522 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[8] & inp_A[7] ;
  assign x__h11535 = x__h11537 | y__h11538 ;
  assign x__h11537 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[9] & inp_A[8] ;
  assign x__h11550 = x__h11552 | y__h11553 ;
  assign x__h11552 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[10] & inp_A[9] ;
  assign x__h11565 = x__h11567 | y__h11568 ;
  assign x__h11567 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[11] & inp_A[10] ;
  assign x__h11841 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[15] ^ inp_A[14] ;
  assign x__h11967 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[14] ^ inp_A[13] ;
  assign x__h12050 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[13] ^ inp_A[12] ;
  assign x__h12133 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[12] ^ inp_A[11] ;
  assign x__h12207 = x__h12209 | y__h12210 ;
  assign x__h12209 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[12] & inp_A[11] ;
  assign x__h12222 = x__h12224 | y__h12225 ;
  assign x__h12224 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[13] & inp_A[12] ;
  assign x__h12237 = x__h12239 | y__h12240 ;
  assign x__h12239 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[14] & inp_A[13] ;
  assign x__h12441 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[2] ^
	     inp_A[0] ;
  assign x__h12706 = x__h12708 | y__h12709 ;
  assign x__h12708 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[3] &
	     inp_A[1] ;
  assign x__h12980 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[7] ^
	     inp_A[5] ;
  assign x__h13106 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[6] ^
	     inp_A[4] ;
  assign x__h13189 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[5] ^
	     inp_A[3] ;
  assign x__h13272 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[4] ^
	     inp_A[2] ;
  assign x__h13346 = x__h13348 | y__h13349 ;
  assign x__h13348 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[4] &
	     inp_A[2] ;
  assign x__h13361 = x__h13363 | y__h13364 ;
  assign x__h13363 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[5] &
	     inp_A[3] ;
  assign x__h13376 = x__h13378 | y__h13379 ;
  assign x__h13378 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[6] &
	     inp_A[4] ;
  assign x__h13391 = x__h13393 | y__h13394 ;
  assign x__h13393 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[7] &
	     inp_A[5] ;
  assign x__h13668 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[11] ^
	     inp_A[9] ;
  assign x__h13794 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[10] ^
	     inp_A[8] ;
  assign x__h13877 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[9] ^
	     inp_A[7] ;
  assign x__h13960 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[8] ^
	     inp_A[6] ;
  assign x__h14034 = x__h14036 | y__h14037 ;
  assign x__h14036 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[8] &
	     inp_A[6] ;
  assign x__h14049 = x__h14051 | y__h14052 ;
  assign x__h14051 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[9] &
	     inp_A[7] ;
  assign x__h14064 = x__h14066 | y__h14067 ;
  assign x__h14066 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[10] &
	     inp_A[8] ;
  assign x__h14079 = x__h14081 | y__h14082 ;
  assign x__h14081 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[11] &
	     inp_A[9] ;
  assign x__h14355 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[15] ^
	     inp_A[13] ;
  assign x__h14481 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[14] ^
	     inp_A[12] ;
  assign x__h14564 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[13] ^
	     inp_A[11] ;
  assign x__h14647 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[12] ^
	     inp_A[10] ;
  assign x__h14721 = x__h14723 | y__h14724 ;
  assign x__h14723 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[12] &
	     inp_A[10] ;
  assign x__h14736 = x__h14738 | y__h14739 ;
  assign x__h14738 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[13] &
	     inp_A[11] ;
  assign x__h14751 = x__h14753 | y__h14754 ;
  assign x__h14753 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[14] &
	     inp_A[12] ;
  assign x__h15494 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[7] ^
	     inp_A[4] ;
  assign x__h15620 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[6] ^
	     inp_A[3] ;
  assign x__h15703 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[5] ^
	     inp_A[2] ;
  assign x__h15786 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[4] ^
	     inp_A[1] ;
  assign x__h15860 = x__h15862 | y__h15863 ;
  assign x__h15862 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[4] &
	     inp_A[1] ;
  assign x__h15875 = x__h15877 | y__h15878 ;
  assign x__h15877 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[5] &
	     inp_A[2] ;
  assign x__h15890 = x__h15892 | y__h15893 ;
  assign x__h15892 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[6] &
	     inp_A[3] ;
  assign x__h15905 = x__h15907 | y__h15908 ;
  assign x__h15907 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[7] &
	     inp_A[4] ;
  assign x__h16182 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[11] ^
	     inp_A[8] ;
  assign x__h16308 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[10] ^
	     inp_A[7] ;
  assign x__h16391 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[9] ^
	     inp_A[6] ;
  assign x__h16474 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[8] ^
	     inp_A[5] ;
  assign x__h16548 = x__h16550 | y__h16551 ;
  assign x__h16550 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[8] &
	     inp_A[5] ;
  assign x__h16563 = x__h16565 | y__h16566 ;
  assign x__h16565 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[9] &
	     inp_A[6] ;
  assign x__h16578 = x__h16580 | y__h16581 ;
  assign x__h16580 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[10] &
	     inp_A[7] ;
  assign x__h16593 = x__h16595 | y__h16596 ;
  assign x__h16595 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[11] &
	     inp_A[8] ;
  assign x__h16869 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[15] ^
	     inp_A[12] ;
  assign x__h16995 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[14] ^
	     inp_A[11] ;
  assign x__h17078 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[13] ^
	     inp_A[10] ;
  assign x__h17161 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[12] ^
	     inp_A[9] ;
  assign x__h17235 = x__h17237 | y__h17238 ;
  assign x__h17237 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[12] &
	     inp_A[9] ;
  assign x__h17250 = x__h17252 | y__h17253 ;
  assign x__h17252 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[13] &
	     inp_A[10] ;
  assign x__h17265 = x__h17267 | y__h17268 ;
  assign x__h17267 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[14] &
	     inp_A[11] ;
  assign x__h18008 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[7] ^
	     inp_A[3] ;
  assign x__h18134 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[6] ^
	     inp_A[2] ;
  assign x__h18217 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[5] ^
	     inp_A[1] ;
  assign x__h18300 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[4] ^
	     inp_A[0] ;
  assign x__h18389 = x__h18391 | y__h18392 ;
  assign x__h18391 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[5] &
	     inp_A[1] ;
  assign x__h18404 = x__h18406 | y__h18407 ;
  assign x__h18406 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[6] &
	     inp_A[2] ;
  assign x__h18419 = x__h18421 | y__h18422 ;
  assign x__h18421 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[7] &
	     inp_A[3] ;
  assign x__h18696 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[11] ^
	     inp_A[7] ;
  assign x__h18822 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[10] ^
	     inp_A[6] ;
  assign x__h18905 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[9] ^
	     inp_A[5] ;
  assign x__h18988 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[8] ^
	     inp_A[4] ;
  assign x__h19062 = x__h19064 | y__h19065 ;
  assign x__h19064 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[8] &
	     inp_A[4] ;
  assign x__h19077 = x__h19079 | y__h19080 ;
  assign x__h19079 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[9] &
	     inp_A[5] ;
  assign x__h19092 = x__h19094 | y__h19095 ;
  assign x__h19094 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[10] &
	     inp_A[6] ;
  assign x__h19107 = x__h19109 | y__h19110 ;
  assign x__h19109 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[11] &
	     inp_A[7] ;
  assign x__h19383 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[15] ^
	     inp_A[11] ;
  assign x__h19509 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[14] ^
	     inp_A[10] ;
  assign x__h19592 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[13] ^
	     inp_A[9] ;
  assign x__h19675 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[12] ^
	     inp_A[8] ;
  assign x__h19749 = x__h19751 | y__h19752 ;
  assign x__h19751 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[12] &
	     inp_A[8] ;
  assign x__h19764 = x__h19766 | y__h19767 ;
  assign x__h19766 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[13] &
	     inp_A[9] ;
  assign x__h19779 = x__h19781 | y__h19782 ;
  assign x__h19781 =
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[14] &
	     inp_A[10] ;
  assign x__h20522 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[7] ^
	     inp_A[2] ;
  assign x__h20648 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[6] ^
	     inp_A[1] ;
  assign x__h20731 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[5] ^
	     inp_A[0] ;
  assign x__h20918 = x__h20920 | y__h20921 ;
  assign x__h20920 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[6] &
	     inp_A[1] ;
  assign x__h20933 = x__h20935 | y__h20936 ;
  assign x__h20935 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[7] &
	     inp_A[2] ;
  assign x__h21210 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[11] ^
	     inp_A[6] ;
  assign x__h21336 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[10] ^
	     inp_A[5] ;
  assign x__h21419 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[9] ^
	     inp_A[4] ;
  assign x__h21502 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[8] ^
	     inp_A[3] ;
  assign x__h21576 = x__h21578 | y__h21579 ;
  assign x__h21578 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[8] &
	     inp_A[3] ;
  assign x__h21591 = x__h21593 | y__h21594 ;
  assign x__h21593 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[9] &
	     inp_A[4] ;
  assign x__h21606 = x__h21608 | y__h21609 ;
  assign x__h21608 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[10] &
	     inp_A[5] ;
  assign x__h21621 = x__h21623 | y__h21624 ;
  assign x__h21623 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[11] &
	     inp_A[6] ;
  assign x__h21897 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[15] ^
	     inp_A[10] ;
  assign x__h22023 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[14] ^
	     inp_A[9] ;
  assign x__h22106 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[13] ^
	     inp_A[8] ;
  assign x__h22189 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[12] ^
	     inp_A[7] ;
  assign x__h22263 = x__h22265 | y__h22266 ;
  assign x__h22265 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[12] &
	     inp_A[7] ;
  assign x__h22278 = x__h22280 | y__h22281 ;
  assign x__h22280 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[13] &
	     inp_A[8] ;
  assign x__h22293 = x__h22295 | y__h22296 ;
  assign x__h22295 =
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[14] &
	     inp_A[9] ;
  assign x__h23036 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[7] ^
	     inp_A[1] ;
  assign x__h23162 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[6] ^
	     inp_A[0] ;
  assign x__h23447 = x__h23449 | y__h23450 ;
  assign x__h23449 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[7] &
	     inp_A[1] ;
  assign x__h23724 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[11] ^
	     inp_A[5] ;
  assign x__h23850 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[10] ^
	     inp_A[4] ;
  assign x__h23933 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[9] ^
	     inp_A[3] ;
  assign x__h24016 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[8] ^
	     inp_A[2] ;
  assign x__h24090 = x__h24092 | y__h24093 ;
  assign x__h24092 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[8] &
	     inp_A[2] ;
  assign x__h24105 = x__h24107 | y__h24108 ;
  assign x__h24107 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[9] &
	     inp_A[3] ;
  assign x__h24120 = x__h24122 | y__h24123 ;
  assign x__h24122 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[10] &
	     inp_A[4] ;
  assign x__h24135 = x__h24137 | y__h24138 ;
  assign x__h24137 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[11] &
	     inp_A[5] ;
  assign x__h24411 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[15] ^
	     inp_A[9] ;
  assign x__h24537 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[14] ^
	     inp_A[8] ;
  assign x__h24620 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[13] ^
	     inp_A[7] ;
  assign x__h24703 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[12] ^
	     inp_A[6] ;
  assign x__h24777 = x__h24779 | y__h24780 ;
  assign x__h24779 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[12] &
	     inp_A[6] ;
  assign x__h24792 = x__h24794 | y__h24795 ;
  assign x__h24794 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[13] &
	     inp_A[7] ;
  assign x__h24807 = x__h24809 | y__h24810 ;
  assign x__h24809 =
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[14] &
	     inp_A[8] ;
  assign x__h25550 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[7] ^
	     inp_A[0] ;
  assign x__h26238 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[11] ^
	     inp_A[4] ;
  assign x__h26364 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[10] ^
	     inp_A[3] ;
  assign x__h26447 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[9] ^
	     inp_A[2] ;
  assign x__h26530 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[8] ^
	     inp_A[1] ;
  assign x__h26604 = x__h26606 | y__h26607 ;
  assign x__h26606 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[8] &
	     inp_A[1] ;
  assign x__h26619 = x__h26621 | y__h26622 ;
  assign x__h26621 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[9] &
	     inp_A[2] ;
  assign x__h26634 = x__h26636 | y__h26637 ;
  assign x__h26636 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[10] &
	     inp_A[3] ;
  assign x__h26649 = x__h26651 | y__h26652 ;
  assign x__h26651 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[11] &
	     inp_A[4] ;
  assign x__h26925 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[15] ^
	     inp_A[8] ;
  assign x__h27051 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[14] ^
	     inp_A[7] ;
  assign x__h27134 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[13] ^
	     inp_A[6] ;
  assign x__h27217 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[12] ^
	     inp_A[5] ;
  assign x__h27291 = x__h27293 | y__h27294 ;
  assign x__h27293 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[12] &
	     inp_A[5] ;
  assign x__h27306 = x__h27308 | y__h27309 ;
  assign x__h27308 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[13] &
	     inp_A[6] ;
  assign x__h27321 = x__h27323 | y__h27324 ;
  assign x__h27323 =
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[14] &
	     inp_A[7] ;
  assign x__h28752 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[11] ^
	     inp_A[3] ;
  assign x__h28878 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[10] ^
	     inp_A[2] ;
  assign x__h28961 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[9] ^
	     inp_A[1] ;
  assign x__h29044 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[8] ^
	     inp_A[0] ;
  assign x__h29133 = x__h29135 | y__h29136 ;
  assign x__h29135 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[9] &
	     inp_A[1] ;
  assign x__h29148 = x__h29150 | y__h29151 ;
  assign x__h29150 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[10] &
	     inp_A[2] ;
  assign x__h29163 = x__h29165 | y__h29166 ;
  assign x__h29165 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[11] &
	     inp_A[3] ;
  assign x__h29439 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[15] ^
	     inp_A[7] ;
  assign x__h29565 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[14] ^
	     inp_A[6] ;
  assign x__h29648 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[13] ^
	     inp_A[5] ;
  assign x__h29731 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[12] ^
	     inp_A[4] ;
  assign x__h29805 = x__h29807 | y__h29808 ;
  assign x__h29807 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[12] &
	     inp_A[4] ;
  assign x__h29820 = x__h29822 | y__h29823 ;
  assign x__h29822 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[13] &
	     inp_A[5] ;
  assign x__h29835 = x__h29837 | y__h29838 ;
  assign x__h29837 =
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[14] &
	     inp_A[6] ;
  assign x__h31266 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[11] ^
	     inp_A[2] ;
  assign x__h31392 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[10] ^
	     inp_A[1] ;
  assign x__h31475 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[9] ^
	     inp_A[0] ;
  assign x__h31662 = x__h31664 | y__h31665 ;
  assign x__h31664 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[10] &
	     inp_A[1] ;
  assign x__h31677 = x__h31679 | y__h31680 ;
  assign x__h31679 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[11] &
	     inp_A[2] ;
  assign x__h31953 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[15] ^
	     inp_A[6] ;
  assign x__h32079 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[14] ^
	     inp_A[5] ;
  assign x__h32162 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[13] ^
	     inp_A[4] ;
  assign x__h32245 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[12] ^
	     inp_A[3] ;
  assign x__h32319 = x__h32321 | y__h32322 ;
  assign x__h32321 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[12] &
	     inp_A[3] ;
  assign x__h32334 = x__h32336 | y__h32337 ;
  assign x__h32336 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[13] &
	     inp_A[4] ;
  assign x__h32349 = x__h32351 | y__h32352 ;
  assign x__h32351 =
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[14] &
	     inp_A[5] ;
  assign x__h33780 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[11] ^
	     inp_A[1] ;
  assign x__h33906 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[10] ^
	     inp_A[0] ;
  assign x__h34191 = x__h34193 | y__h34194 ;
  assign x__h34193 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[11] &
	     inp_A[1] ;
  assign x__h34467 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[15] ^
	     inp_A[5] ;
  assign x__h34593 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[14] ^
	     inp_A[4] ;
  assign x__h34676 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[13] ^
	     inp_A[3] ;
  assign x__h34759 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[12] ^
	     inp_A[2] ;
  assign x__h34833 = x__h34835 | y__h34836 ;
  assign x__h34835 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[12] &
	     inp_A[2] ;
  assign x__h34848 = x__h34850 | y__h34851 ;
  assign x__h34850 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[13] &
	     inp_A[3] ;
  assign x__h34863 = x__h34865 | y__h34866 ;
  assign x__h34865 =
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[14] &
	     inp_A[4] ;
  assign x__h36294 =
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[11] ^
	     inp_A[0] ;
  assign x__h36981 =
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[15] ^
	     inp_A[4] ;
  assign x__h37107 =
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[14] ^
	     inp_A[3] ;
  assign x__h37190 =
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[13] ^
	     inp_A[2] ;
  assign x__h37273 =
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[12] ^
	     inp_A[1] ;
  assign x__h37347 = x__h37349 | y__h37350 ;
  assign x__h37349 =
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[12] &
	     inp_A[1] ;
  assign x__h37362 = x__h37364 | y__h37365 ;
  assign x__h37364 =
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[13] &
	     inp_A[2] ;
  assign x__h37377 = x__h37379 | y__h37380 ;
  assign x__h37379 =
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[14] &
	     inp_A[3] ;
  assign x__h39495 =
	     IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927[15] ^
	     inp_A[3] ;
  assign x__h39621 =
	     IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927[14] ^
	     inp_A[2] ;
  assign x__h39704 =
	     IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927[13] ^
	     inp_A[1] ;
  assign x__h39787 =
	     IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927[12] ^
	     inp_A[0] ;
  assign x__h39876 = x__h39878 | y__h39879 ;
  assign x__h39878 =
	     IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927[13] &
	     inp_A[1] ;
  assign x__h39891 = x__h39893 | y__h39894 ;
  assign x__h39893 =
	     IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927[14] &
	     inp_A[2] ;
  assign x__h42009 =
	     IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957[15] ^
	     inp_A[2] ;
  assign x__h42135 =
	     IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957[14] ^
	     inp_A[1] ;
  assign x__h42218 =
	     IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957[13] ^
	     inp_A[0] ;
  assign x__h42405 = x__h42407 | y__h42408 ;
  assign x__h42407 =
	     IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957[14] &
	     inp_A[1] ;
  assign x__h44523 =
	     IF_inp_B_BIT_13_60_THEN_IF_inp_B_BIT_12_30_THE_ETC___d980[15] ^
	     inp_A[1] ;
  assign x__h44649 =
	     IF_inp_B_BIT_13_60_THEN_IF_inp_B_BIT_12_30_THE_ETC___d980[14] ^
	     inp_A[0] ;
  assign x__h47037 =
	     IF_inp_B_BIT_14_82_THEN_IF_inp_B_BIT_13_60_THE_ETC___d993[15] ^
	     inp_A[0] ;
  assign x__h47642 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[2] ^
	     inp_C[2] ;
  assign x__h47725 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[1] ^
	     inp_C[1] ;
  assign x__h47877 = x__h47879 | y__h47880 ;
  assign x__h47879 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[1] &
	     inp_C[1] ;
  assign x__h47892 = x__h47894 | y__h47895 ;
  assign x__h47894 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[2] &
	     inp_C[2] ;
  assign x__h47907 = x__h47909 | y__h47910 ;
  assign x__h47909 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[3] &
	     inp_C[3] ;
  assign x__h48181 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[7] ^
	     inp_C[7] ;
  assign x__h48308 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[6] ^
	     inp_C[6] ;
  assign x__h48391 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[5] ^
	     inp_C[5] ;
  assign x__h48474 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[4] ^
	     inp_C[4] ;
  assign x__h48548 = x__h48550 | y__h48551 ;
  assign x__h48550 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[4] &
	     inp_C[4] ;
  assign x__h48563 = x__h48565 | y__h48566 ;
  assign x__h48565 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[5] &
	     inp_C[5] ;
  assign x__h48578 = x__h48580 | y__h48581 ;
  assign x__h48580 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[6] &
	     inp_C[6] ;
  assign x__h48593 = x__h48595 | y__h48596 ;
  assign x__h48595 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[7] &
	     inp_C[7] ;
  assign x__h48870 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[11] ^
	     inp_C[11] ;
  assign x__h48997 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[10] ^
	     inp_C[10] ;
  assign x__h49080 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[9] ^
	     inp_C[9] ;
  assign x__h49163 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[8] ^
	     inp_C[8] ;
  assign x__h49237 = x__h49239 | y__h49240 ;
  assign x__h49239 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[8] &
	     inp_C[8] ;
  assign x__h49252 = x__h49254 | y__h49255 ;
  assign x__h49254 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[9] &
	     inp_C[9] ;
  assign x__h49267 = x__h49269 | y__h49270 ;
  assign x__h49269 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[10] &
	     inp_C[10] ;
  assign x__h49282 = x__h49284 | y__h49285 ;
  assign x__h49284 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[11] &
	     inp_C[11] ;
  assign x__h49559 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[15] ^
	     inp_C[15] ;
  assign x__h49686 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[14] ^
	     inp_C[14] ;
  assign x__h49769 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[13] ^
	     inp_C[13] ;
  assign x__h49852 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[12] ^
	     inp_C[12] ;
  assign x__h49926 = x__h49928 | y__h49929 ;
  assign x__h49928 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[12] &
	     inp_C[12] ;
  assign x__h49941 = x__h49943 | y__h49944 ;
  assign x__h49943 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[13] &
	     inp_C[13] ;
  assign x__h49956 = x__h49958 | y__h49959 ;
  assign x__h49958 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[14] &
	     inp_C[14] ;
  assign x__h49971 = x__h49973 | y__h49974 ;
  assign x__h49973 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[15] &
	     inp_C[15] ;
  assign x__h50248 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[19] ^
	     inp_C[19] ;
  assign x__h50375 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[18] ^
	     inp_C[18] ;
  assign x__h50458 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[17] ^
	     inp_C[17] ;
  assign x__h50541 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[16] ^
	     inp_C[16] ;
  assign x__h50615 = x__h50617 | y__h50618 ;
  assign x__h50617 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[16] &
	     inp_C[16] ;
  assign x__h50630 = x__h50632 | y__h50633 ;
  assign x__h50632 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[17] &
	     inp_C[17] ;
  assign x__h50645 = x__h50647 | y__h50648 ;
  assign x__h50647 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[18] &
	     inp_C[18] ;
  assign x__h50660 = x__h50662 | y__h50663 ;
  assign x__h50662 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[19] &
	     inp_C[19] ;
  assign x__h50937 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[23] ^
	     inp_C[23] ;
  assign x__h51064 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[22] ^
	     inp_C[22] ;
  assign x__h51147 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[21] ^
	     inp_C[21] ;
  assign x__h51230 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[20] ^
	     inp_C[20] ;
  assign x__h51304 = x__h51306 | y__h51307 ;
  assign x__h51306 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[20] &
	     inp_C[20] ;
  assign x__h51319 = x__h51321 | y__h51322 ;
  assign x__h51321 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[21] &
	     inp_C[21] ;
  assign x__h51334 = x__h51336 | y__h51337 ;
  assign x__h51336 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[22] &
	     inp_C[22] ;
  assign x__h51349 = x__h51351 | y__h51352 ;
  assign x__h51351 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[23] &
	     inp_C[23] ;
  assign x__h51626 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[27] ^
	     inp_C[27] ;
  assign x__h51753 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[26] ^
	     inp_C[26] ;
  assign x__h51836 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[25] ^
	     inp_C[25] ;
  assign x__h51919 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[24] ^
	     inp_C[24] ;
  assign x__h51993 = x__h51995 | y__h51996 ;
  assign x__h51995 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[24] &
	     inp_C[24] ;
  assign x__h52008 = x__h52010 | y__h52011 ;
  assign x__h52010 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[25] &
	     inp_C[25] ;
  assign x__h52023 = x__h52025 | y__h52026 ;
  assign x__h52025 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[26] &
	     inp_C[26] ;
  assign x__h52038 = x__h52040 | y__h52041 ;
  assign x__h52040 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[27] &
	     inp_C[27] ;
  assign x__h52314 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[31] ^
	     inp_C[31] ;
  assign x__h52441 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[30] ^
	     inp_C[30] ;
  assign x__h52524 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[29] ^
	     inp_C[29] ;
  assign x__h52607 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[28] ^
	     inp_C[28] ;
  assign x__h52681 = x__h52683 | y__h52684 ;
  assign x__h52683 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[28] &
	     inp_C[28] ;
  assign x__h52696 = x__h52698 | y__h52699 ;
  assign x__h52698 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[29] &
	     inp_C[29] ;
  assign x__h52711 = x__h52713 | y__h52714 ;
  assign x__h52713 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[30] &
	     inp_C[30] ;
  assign x__h6125 =
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[3] ^
	     inp_A[0] ;
  assign x__h6512 =
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[3] ^
	     inp_A[1] ;
  assign x__h6899 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[3] ^ inp_A[2] ;
  assign x__h703 =
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[3] ^
	     inp_C[3] ;
  assign x__h748 =
	     (inp_B == 16'd0) ?
	       inp_B :
	       IF_inp_B_BITS_15_TO_1_EQ_0_THEN_IF_inp_B_BIT_0_ETC___d1013 ;
  assign x__h9927 = IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[2] ^ inp_A[1] ;
  assign y__h10178 = carry__h6769 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[2] ;
  assign y__h10180 = inp_A[1] & carry__h6769 ;
  assign y__h10193 = carry__h6772 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[3] ;
  assign y__h10195 = inp_A[2] & carry__h6772 ;
  assign y__h10833 = carry__h6587 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[4] ;
  assign y__h10835 = inp_A[3] & carry__h6587 ;
  assign y__h10848 =
	     carry__h10333 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[5] ;
  assign y__h10850 = inp_A[4] & carry__h10333 ;
  assign y__h10863 =
	     carry__h10336 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[6] ;
  assign y__h10865 = inp_A[5] & carry__h10336 ;
  assign y__h10878 =
	     carry__h10339 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[7] ;
  assign y__h10880 = inp_A[6] & carry__h10339 ;
  assign y__h11521 = carry__h6589 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[8] ;
  assign y__h11523 = inp_A[7] & carry__h6589 ;
  assign y__h11536 =
	     carry__h11021 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[9] ;
  assign y__h11538 = inp_A[8] & carry__h11021 ;
  assign y__h11551 =
	     carry__h11024 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[10] ;
  assign y__h11553 = inp_A[9] & carry__h11024 ;
  assign y__h11566 =
	     carry__h11027 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[11] ;
  assign y__h11568 = inp_A[10] & carry__h11027 ;
  assign y__h12208 =
	     carry__h6591 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[12] ;
  assign y__h12210 = inp_A[11] & carry__h6591 ;
  assign y__h12223 =
	     carry__h11708 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[13] ;
  assign y__h12225 = inp_A[12] & carry__h11708 ;
  assign y__h12238 =
	     carry__h11711 & IF_inp_B_BIT_0_THEN_inp_A_ELSE_0___d9[14] ;
  assign y__h12240 = inp_A[13] & carry__h11711 ;
  assign y__h12707 =
	     carry__h6385 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[3] ;
  assign y__h12709 = inp_A[1] & carry__h6385 ;
  assign y__h13347 =
	     carry__h6200 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[4] ;
  assign y__h13349 = inp_A[2] & carry__h6200 ;
  assign y__h13362 =
	     carry__h12847 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[5] ;
  assign y__h13364 = inp_A[3] & carry__h12847 ;
  assign y__h13377 =
	     carry__h12850 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[6] ;
  assign y__h13379 = inp_A[4] & carry__h12850 ;
  assign y__h13392 =
	     carry__h12853 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[7] ;
  assign y__h13394 = inp_A[5] & carry__h12853 ;
  assign y__h14035 =
	     carry__h6202 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[8] ;
  assign y__h14037 = inp_A[6] & carry__h6202 ;
  assign y__h14050 =
	     carry__h13535 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[9] ;
  assign y__h14052 = inp_A[7] & carry__h13535 ;
  assign y__h14065 =
	     carry__h13538 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[10] ;
  assign y__h14067 = inp_A[8] & carry__h13538 ;
  assign y__h14080 =
	     carry__h13541 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[11] ;
  assign y__h14082 = inp_A[9] & carry__h13541 ;
  assign y__h14722 =
	     carry__h6204 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[12] ;
  assign y__h14724 = inp_A[10] & carry__h6204 ;
  assign y__h14737 =
	     carry__h14222 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[13] ;
  assign y__h14739 = inp_A[11] & carry__h14222 ;
  assign y__h14752 =
	     carry__h14225 &
	     IF_inp_B_BIT_1_2_THEN_IF_inp_B_BIT_0_THEN_inp__ETC___d149[14] ;
  assign y__h14754 = inp_A[12] & carry__h14225 ;
  assign y__h15861 =
	     carry__h5813 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[4] ;
  assign y__h15863 = inp_A[1] & carry__h5813 ;
  assign y__h15876 =
	     carry__h15361 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[5] ;
  assign y__h15878 = inp_A[2] & carry__h15361 ;
  assign y__h15891 =
	     carry__h15364 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[6] ;
  assign y__h15893 = inp_A[3] & carry__h15364 ;
  assign y__h15906 =
	     carry__h15367 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[7] ;
  assign y__h15908 = inp_A[4] & carry__h15367 ;
  assign y__h16549 =
	     carry__h5815 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[8] ;
  assign y__h16551 = inp_A[5] & carry__h5815 ;
  assign y__h16564 =
	     carry__h16049 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[9] ;
  assign y__h16566 = inp_A[6] & carry__h16049 ;
  assign y__h16579 =
	     carry__h16052 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[10] ;
  assign y__h16581 = inp_A[7] & carry__h16052 ;
  assign y__h16594 =
	     carry__h16055 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[11] ;
  assign y__h16596 = inp_A[8] & carry__h16055 ;
  assign y__h17236 =
	     carry__h5817 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[12] ;
  assign y__h17238 = inp_A[9] & carry__h5817 ;
  assign y__h17251 =
	     carry__h16736 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[13] ;
  assign y__h17253 = inp_A[10] & carry__h16736 ;
  assign y__h17266 =
	     carry__h16739 &
	     IF_inp_B_BIT_2_52_THEN_IF_inp_B_BIT_1_2_THEN_I_ETC___d265[14] ;
  assign y__h17268 = inp_A[11] & carry__h16739 ;
  assign y__h18390 =
	     carry__h17875 &
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[5] ;
  assign y__h18392 = inp_A[1] & carry__h17875 ;
  assign y__h18405 =
	     carry__h17878 &
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[6] ;
  assign y__h18407 = inp_A[2] & carry__h17878 ;
  assign y__h18420 =
	     carry__h17881 &
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[7] ;
  assign y__h18422 = inp_A[3] & carry__h17881 ;
  assign y__h19063 =
	     carry__h5428 &
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[8] ;
  assign y__h19065 = inp_A[4] & carry__h5428 ;
  assign y__h19078 =
	     carry__h18563 &
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[9] ;
  assign y__h19080 = inp_A[5] & carry__h18563 ;
  assign y__h19093 =
	     carry__h18566 &
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[10] ;
  assign y__h19095 = inp_A[6] & carry__h18566 ;
  assign y__h19108 =
	     carry__h18569 &
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[11] ;
  assign y__h19110 = inp_A[7] & carry__h18569 ;
  assign y__h19750 =
	     carry__h5430 &
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[12] ;
  assign y__h19752 = inp_A[8] & carry__h5430 ;
  assign y__h19765 =
	     carry__h19250 &
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[13] ;
  assign y__h19767 = inp_A[9] & carry__h19250 ;
  assign y__h19780 =
	     carry__h19253 &
	     IF_inp_B_BIT_3_68_THEN_IF_inp_B_BIT_2_52_THEN__ETC___d373[14] ;
  assign y__h19782 = inp_A[10] & carry__h19253 ;
  assign y__h20919 =
	     carry__h20392 &
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[6] ;
  assign y__h20921 = inp_A[1] & carry__h20392 ;
  assign y__h20934 =
	     carry__h20395 &
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[7] ;
  assign y__h20936 = inp_A[2] & carry__h20395 ;
  assign y__h21577 =
	     carry__h5041 &
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[8] ;
  assign y__h21579 = inp_A[3] & carry__h5041 ;
  assign y__h21592 =
	     carry__h21077 &
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[9] ;
  assign y__h21594 = inp_A[4] & carry__h21077 ;
  assign y__h21607 =
	     carry__h21080 &
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[10] ;
  assign y__h21609 = inp_A[5] & carry__h21080 ;
  assign y__h21622 =
	     carry__h21083 &
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[11] ;
  assign y__h21624 = inp_A[6] & carry__h21083 ;
  assign y__h22264 =
	     carry__h5043 &
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[12] ;
  assign y__h22266 = inp_A[7] & carry__h5043 ;
  assign y__h22279 =
	     carry__h21764 &
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[13] ;
  assign y__h22281 = inp_A[8] & carry__h21764 ;
  assign y__h22294 =
	     carry__h21767 &
	     IF_inp_B_BIT_4_76_THEN_IF_inp_B_BIT_3_68_THEN__ETC___d472[14] ;
  assign y__h22296 = inp_A[9] & carry__h21767 ;
  assign y__h23448 =
	     carry__h22909 &
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[7] ;
  assign y__h23450 = inp_A[1] & carry__h22909 ;
  assign y__h24091 =
	     carry__h4654 &
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[8] ;
  assign y__h24093 = inp_A[2] & carry__h4654 ;
  assign y__h24106 =
	     carry__h23591 &
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[9] ;
  assign y__h24108 = inp_A[3] & carry__h23591 ;
  assign y__h24121 =
	     carry__h23594 &
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[10] ;
  assign y__h24123 = inp_A[4] & carry__h23594 ;
  assign y__h24136 =
	     carry__h23597 &
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[11] ;
  assign y__h24138 = inp_A[5] & carry__h23597 ;
  assign y__h24778 =
	     carry__h4656 &
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[12] ;
  assign y__h24780 = inp_A[6] & carry__h4656 ;
  assign y__h24793 =
	     carry__h24278 &
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[13] ;
  assign y__h24795 = inp_A[7] & carry__h24278 ;
  assign y__h24808 =
	     carry__h24281 &
	     IF_inp_B_BIT_5_75_THEN_IF_inp_B_BIT_4_76_THEN__ETC___d564[14] ;
  assign y__h24810 = inp_A[8] & carry__h24281 ;
  assign y__h26605 =
	     carry__h4267 &
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[8] ;
  assign y__h26607 = inp_A[1] & carry__h4267 ;
  assign y__h26620 =
	     carry__h26105 &
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[9] ;
  assign y__h26622 = inp_A[2] & carry__h26105 ;
  assign y__h26635 =
	     carry__h26108 &
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[10] ;
  assign y__h26637 = inp_A[3] & carry__h26108 ;
  assign y__h26650 =
	     carry__h26111 &
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[11] ;
  assign y__h26652 = inp_A[4] & carry__h26111 ;
  assign y__h27292 =
	     carry__h4269 &
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[12] ;
  assign y__h27294 = inp_A[5] & carry__h4269 ;
  assign y__h27307 =
	     carry__h26792 &
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[13] ;
  assign y__h27309 = inp_A[6] & carry__h26792 ;
  assign y__h27322 =
	     carry__h26795 &
	     IF_inp_B_BIT_6_67_THEN_IF_inp_B_BIT_5_75_THEN__ETC___d647[14] ;
  assign y__h27324 = inp_A[7] & carry__h26795 ;
  assign y__h29134 =
	     carry__h28619 &
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[9] ;
  assign y__h29136 = inp_A[1] & carry__h28619 ;
  assign y__h29149 =
	     carry__h28622 &
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[10] ;
  assign y__h29151 = inp_A[2] & carry__h28622 ;
  assign y__h29164 =
	     carry__h28625 &
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[11] ;
  assign y__h29166 = inp_A[3] & carry__h28625 ;
  assign y__h29806 =
	     carry__h3882 &
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[12] ;
  assign y__h29808 = inp_A[4] & carry__h3882 ;
  assign y__h29821 =
	     carry__h29306 &
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[13] ;
  assign y__h29823 = inp_A[5] & carry__h29306 ;
  assign y__h29836 =
	     carry__h29309 &
	     IF_inp_B_BIT_7_50_THEN_IF_inp_B_BIT_6_67_THEN__ETC___d720[14] ;
  assign y__h29838 = inp_A[6] & carry__h29309 ;
  assign y__h31663 =
	     carry__h31136 &
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[10] ;
  assign y__h31665 = inp_A[1] & carry__h31136 ;
  assign y__h31678 =
	     carry__h31139 &
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[11] ;
  assign y__h31680 = inp_A[2] & carry__h31139 ;
  assign y__h32320 =
	     carry__h3495 &
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[12] ;
  assign y__h32322 = inp_A[3] & carry__h3495 ;
  assign y__h32335 =
	     carry__h31820 &
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[13] ;
  assign y__h32337 = inp_A[4] & carry__h31820 ;
  assign y__h32350 =
	     carry__h31823 &
	     IF_inp_B_BIT_8_23_THEN_IF_inp_B_BIT_7_50_THEN__ETC___d784[14] ;
  assign y__h32352 = inp_A[5] & carry__h31823 ;
  assign y__h34192 =
	     carry__h33653 &
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[11] ;
  assign y__h34194 = inp_A[1] & carry__h33653 ;
  assign y__h34834 =
	     carry__h3108 &
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[12] ;
  assign y__h34836 = inp_A[2] & carry__h3108 ;
  assign y__h34849 =
	     carry__h34334 &
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[13] ;
  assign y__h34851 = inp_A[3] & carry__h34334 ;
  assign y__h34864 =
	     carry__h34337 &
	     IF_inp_B_BIT_9_87_THEN_IF_inp_B_BIT_8_23_THEN__ETC___d841[14] ;
  assign y__h34866 = inp_A[4] & carry__h34337 ;
  assign y__h37348 =
	     carry__h2721 &
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[12] ;
  assign y__h37350 = inp_A[1] & carry__h2721 ;
  assign y__h37363 =
	     carry__h36848 &
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[13] ;
  assign y__h37365 = inp_A[2] & carry__h36848 ;
  assign y__h37378 =
	     carry__h36851 &
	     IF_inp_B_BIT_10_44_THEN_IF_inp_B_BIT_9_87_THEN_ETC___d889[14] ;
  assign y__h37380 = inp_A[3] & carry__h36851 ;
  assign y__h39877 =
	     carry__h39362 &
	     IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927[13] ;
  assign y__h39879 = inp_A[1] & carry__h39362 ;
  assign y__h39892 =
	     carry__h39365 &
	     IF_inp_B_BIT_11_92_THEN_IF_inp_B_BIT_10_44_THE_ETC___d927[14] ;
  assign y__h39894 = inp_A[2] & carry__h39365 ;
  assign y__h42406 =
	     carry__h41879 &
	     IF_inp_B_BIT_12_30_THEN_IF_inp_B_BIT_11_92_THE_ETC___d957[14] ;
  assign y__h42408 = inp_A[1] & carry__h41879 ;
  assign y__h47878 =
	     carry__h569 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[1] ;
  assign y__h47880 = inp_C[1] & carry__h569 ;
  assign y__h47893 =
	     carry__h572 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[2] ;
  assign y__h47895 = inp_C[2] & carry__h572 ;
  assign y__h47908 =
	     carry__h575 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[3] ;
  assign y__h47910 = inp_C[3] & carry__h575 ;
  assign y__h48549 =
	     carry__h245 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[4] ;
  assign y__h48551 = inp_C[4] & carry__h245 ;
  assign y__h48564 =
	     carry__h48048 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[5] ;
  assign y__h48566 = inp_C[5] & carry__h48048 ;
  assign y__h48579 =
	     carry__h48051 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[6] ;
  assign y__h48581 = inp_C[6] & carry__h48051 ;
  assign y__h48594 =
	     carry__h48054 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[7] ;
  assign y__h48596 = inp_C[7] & carry__h48054 ;
  assign y__h49238 =
	     carry__h247 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[8] ;
  assign y__h49240 = inp_C[8] & carry__h247 ;
  assign y__h49253 =
	     carry__h48737 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[9] ;
  assign y__h49255 = inp_C[9] & carry__h48737 ;
  assign y__h49268 =
	     carry__h48740 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[10] ;
  assign y__h49270 = inp_C[10] & carry__h48740 ;
  assign y__h49283 =
	     carry__h48743 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[11] ;
  assign y__h49285 = inp_C[11] & carry__h48743 ;
  assign y__h49927 =
	     carry__h249 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[12] ;
  assign y__h49929 = inp_C[12] & carry__h249 ;
  assign y__h49942 =
	     carry__h49426 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[13] ;
  assign y__h49944 = inp_C[13] & carry__h49426 ;
  assign y__h49957 =
	     carry__h49429 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[14] ;
  assign y__h49959 = inp_C[14] & carry__h49429 ;
  assign y__h49972 =
	     carry__h49432 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[15] ;
  assign y__h49974 = inp_C[15] & carry__h49432 ;
  assign y__h50616 =
	     carry__h251 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[16] ;
  assign y__h50618 = inp_C[16] & carry__h251 ;
  assign y__h50631 =
	     carry__h50115 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[17] ;
  assign y__h50633 = inp_C[17] & carry__h50115 ;
  assign y__h50646 =
	     carry__h50118 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[18] ;
  assign y__h50648 = inp_C[18] & carry__h50118 ;
  assign y__h50661 =
	     carry__h50121 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[19] ;
  assign y__h50663 = inp_C[19] & carry__h50121 ;
  assign y__h51305 =
	     carry__h253 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[20] ;
  assign y__h51307 = inp_C[20] & carry__h253 ;
  assign y__h51320 =
	     carry__h50804 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[21] ;
  assign y__h51322 = inp_C[21] & carry__h50804 ;
  assign y__h51335 =
	     carry__h50807 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[22] ;
  assign y__h51337 = inp_C[22] & carry__h50807 ;
  assign y__h51350 =
	     carry__h50810 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[23] ;
  assign y__h51352 = inp_C[23] & carry__h50810 ;
  assign y__h51994 =
	     carry__h255 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[24] ;
  assign y__h51996 = inp_C[24] & carry__h255 ;
  assign y__h52009 =
	     carry__h51493 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[25] ;
  assign y__h52011 = inp_C[25] & carry__h51493 ;
  assign y__h52024 =
	     carry__h51496 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[26] ;
  assign y__h52026 = inp_C[26] & carry__h51496 ;
  assign y__h52039 =
	     carry__h51499 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[27] ;
  assign y__h52041 = inp_C[27] & carry__h51499 ;
  assign y__h52682 =
	     carry__h257 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[28] ;
  assign y__h52684 = inp_C[28] & carry__h257 ;
  assign y__h52697 =
	     carry__h52181 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[29] ;
  assign y__h52699 = inp_C[29] & carry__h52181 ;
  assign y__h52712 =
	     carry__h52184 &
	     SEXT_IF_inp_B_EQ_0_THEN_inp_B_ELSE_IF_inp_B_BI_ETC___d1015[30] ;
  assign y__h52714 = inp_C[30] & carry__h52184 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        inp_A <= `BSV_ASSIGNMENT_DELAY 16'd0;
	inp_B <= `BSV_ASSIGNMENT_DELAY 16'd0;
	inp_C <= `BSV_ASSIGNMENT_DELAY 32'd0;
	result <= `BSV_ASSIGNMENT_DELAY 32'd0;
	state <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (inp_A_EN) inp_A <= `BSV_ASSIGNMENT_DELAY inp_A_D_IN;
	if (inp_B_EN) inp_B <= `BSV_ASSIGNMENT_DELAY inp_B_D_IN;
	if (inp_C_EN) inp_C <= `BSV_ASSIGNMENT_DELAY inp_C_D_IN;
	if (result_EN) result <= `BSV_ASSIGNMENT_DELAY result_D_IN;
	if (state_EN) state <= `BSV_ASSIGNMENT_DELAY state_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    inp_A = 16'hAAAA;
    inp_B = 16'hAAAA;
    inp_C = 32'hAAAAAAAA;
    result = 32'hAAAAAAAA;
    state = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkMult

